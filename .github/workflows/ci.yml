name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b $(go env GOPATH)/bin v1.64.8
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run linter
        run: golangci-lint run




  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Download dependencies
        run: go mod download

      - name: Compile binary
        run: go build -o todo-app ./cmd/server

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go mod download

      - name: Execute unit tests
        run: go test ./todo -v

      - name: Generate coverage report
        run: go test ./todo -coverprofile=coverage.out

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (dev) image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:dev
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ github.sha }}

      - name: Tag latest for prod
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest

  deploy-dev:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy dev image
        run: echo "Deploying ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:dev to development"

  deploy-prod:
    name: Deploy to Prod Environment
    runs-on: ubuntu-latest
    needs: docker
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    steps:
      - name: Deploy prod image
        run: echo "Deploying ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest to production"
